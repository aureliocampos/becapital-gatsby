{"version":3,"file":"component---src-pages-blog-js-ae271d76382cc80ce159.js","mappings":"yLA6FA,UApFkB,SAAC,GAAc,IAEzBA,EAFwB,EAAXC,KAEGC,UAAUC,MAEhC,GAAyBC,EAAAA,EAAAA,WAAS,OAAIJ,EAASK,MAAM,EAAG,KAAjDC,EAAP,KAAaC,EAAb,KAEA,GAAiCH,EAAAA,EAAAA,WAAS,GAAnCI,EAAP,KAAiBC,EAAjB,KAEA,GAA+BL,EAAAA,EAAAA,UAASJ,EAASU,OAAS,GAAnDC,EAAP,KAAgBC,EAAhB,KAuBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAIL,GAAYG,EAAS,CACvB,IAAMG,EAAgBR,EAAKI,OAErBK,EADSD,EAAgBd,EAASU,OAEpCV,EAASK,MAAMS,EAAeA,EAAgB,GAC9C,GACJP,EAAQ,GAAD,eAAKD,IAAL,OAAcS,KACrBN,GAAY,MAEb,CAACD,EAAUG,KAEdE,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAASV,EAAKI,OAASV,EAASU,OACtCE,EAAWI,KACV,CAACV,IAGF,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKW,MAAM,WAEX,2BAASC,UAAU,0BACjB,sBAAIA,UAAU,kBAAd,QACA,qBAAGA,UAAU,qBAAb,6HACA,uBAAKA,UAAU,sCACb,sBAAIA,UAAU,gBAEXZ,EAAKa,KAAK,SAAAC,GAET,IAAQC,EAAsCD,EAAtCC,IAAKJ,EAAiCG,EAAjCH,MAAOK,EAA0BF,EAA1BE,cAAeC,EAAWH,EAAXG,QAE7BC,EAA0B,OAAlBF,GAAyBG,EAAAA,EAAAA,GAASH,EAAcI,KAAKC,WACnE,MAEA,OACE,sBAAIC,IAAKP,EAAKH,UAAU,eAEtB,2BAASA,UAAU,kBACjB,gBAAC,EAAAW,KAAD,CAAMC,GAAIT,GACPG,GACC,gBAAC,EAAAO,EAAD,CACEP,MAAOA,EACPQ,IAAKf,EACLgB,GAAG,SACHf,UAAU,gBACVgB,aAAa,kBAInB,sBAAIhB,UAAU,iBAAgBiB,EAAAA,EAAAA,IAAMlB,IACpC,qBAAGC,UAAU,mBAAkBiB,EAAAA,EAAAA,IAAMZ,IACrC,gBAAC,EAAAM,KAAD,CAAMC,GAAIT,EAAKH,UAAU,0BAAzB,oBAQTP,EACG,0BAAQyB,QAhEG,WACrB3B,GAAY,IA+D+BS,UAAU,2BAA3C,gBAEA","sources":["webpack://becapital/./src/pages/blog.js"],"sourcesContent":["import React, { useEffect, useState }  from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport parse from \"html-react-parser\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data }) => {\n\n  const allPosts = data.allWpPost.nodes\n\n  const [list, setList ] = useState([...allPosts.slice(0, 6)])\n\n  const [loadMore, setLoadMore ] = useState(false)\n\n  const [hasMore, setHasMore ] = useState(allPosts.length > 6)\n\n  const handleLoadMore = () => {\n    setLoadMore(true)\n  }\n\n  useEffect(() => {\n    if (loadMore && hasMore) {\n      const currentLength = list.length\n      const isMore = currentLength < allPosts.length\n      const nextResults = isMore\n        ? allPosts.slice(currentLength, currentLength + 6)\n        : []\n      setList([...list, ...nextResults])\n      setLoadMore(false)\n    }\n  }, [loadMore, hasMore]) //eslint-disable-line\n\n  useEffect(() => {\n    const isMore = list.length < allPosts.length\n    setHasMore(isMore)\n  }, [list]) //eslint-disable-line\n\n  return (\n    <Layout>\n      <Seo title=\"Blog |\" />\n\n      <section className=\"section section__posts\">\n        <h1 className=\"section__title\">Blog</h1>\n        <p className=\"section__subtitle\">Investimos em informação pra você investir em você. Toda semana, um novo artigo sobre educação financeira e investimentos</p>\n        <div className=\"section__content posts posts--grid\">\n          <ul className=\"posts__items\">\n\n            {list.map( article => {\n\n              const { uri, title, featuredImage, excerpt} = article\n\n              const image = featuredImage !== null ? getImage(featuredImage.node.localFile) :\n              'url';\n\n              return (\n                <li key={uri} className=\"posts__item\">\n                 \n                  <article className=\"posts__article\">\n                    <Link to={uri}>\n                      {image && (\n                        <GatsbyImage\n                          image={image}\n                          alt={title}\n                          as=\"figure\"\n                          className=\"posts__figure\"\n                          imgClassName=\"posts__image\"\n                        />\n                      )}\n                    </Link>\n                    <h2 className=\"posts__title\">{parse(title)}</h2>\n                    <p className=\"posts__excerpt\">{parse(excerpt)}</p>\n                    <Link to={uri} className=\"button button__primary\">LER ARTIGO</Link>\n                  </article>\n                  \n                </li>\n              )\n            })}\n\n          </ul>\n          {hasMore ? (\n              <button onClick={handleLoadMore} className=\"button button__tertiary\">MAIS ARTIGOS</button>\n            ) : (\n              <p></p>\n            )}\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    allWpPost(\n      sort: { fields: [date], order: DESC }\n      filter: {status: {eq: \"publish\"}}\n    ) {\n      nodes {\n        uri\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        excerpt\n        featuredImage {\n          node {\n            localFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        status\n      }\n    }\n  }\n`\n"],"names":["allPosts","data","allWpPost","nodes","useState","slice","list","setList","loadMore","setLoadMore","length","hasMore","setHasMore","useEffect","currentLength","nextResults","isMore","title","className","map","article","uri","featuredImage","excerpt","image","getImage","node","localFile","key","Link","to","G","alt","as","imgClassName","parse","onClick"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-blog-js-383b12cf55e3300ad492.js","mappings":"yLA6FA,UApFkB,SAAC,GAAc,IAEzBA,EAFwB,EAAXC,KAEGC,UAAUC,MAEhC,GAAyBC,EAAAA,EAAAA,WAAS,OAAIJ,EAASK,MAAM,EAAG,KAAjDC,EAAP,KAAaC,EAAb,KAEA,GAAiCH,EAAAA,EAAAA,WAAS,GAAnCI,EAAP,KAAiBC,EAAjB,KAEA,GAA+BL,EAAAA,EAAAA,UAASJ,EAASU,OAAS,GAAnDC,EAAP,KAAgBC,EAAhB,KAuBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAIL,GAAYG,EAAS,CACvB,IAAMG,EAAgBR,EAAKI,OAErBK,EADSD,EAAgBd,EAASU,OAEpCV,EAASK,MAAMS,EAAeA,EAAgB,GAC9C,GACJP,EAAQ,GAAD,eAAKD,IAAL,OAAcS,KACrBN,GAAY,MAEb,CAACD,EAAUG,KAEdE,EAAAA,EAAAA,YAAU,WACR,IAAMG,EAASV,EAAKI,OAASV,EAASU,OACtCE,EAAWI,KACV,CAACV,IAGF,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKW,MAAM,WAEX,2BAASC,UAAU,0BACjB,sBAAIA,UAAU,kBAAd,QACA,qBAAGA,UAAU,qBAAb,6HACA,uBAAKA,UAAU,sCACb,sBAAIA,UAAU,gBAEXZ,EAAKa,KAAK,SAAAC,GAET,IAAQC,EAAsCD,EAAtCC,IAAKJ,EAAiCG,EAAjCH,MAAOK,EAA0BF,EAA1BE,cAAeC,EAAWH,EAAXG,QAE7BC,EAA0B,OAAlBF,GAAyBG,EAAAA,EAAAA,GAASH,EAAcI,KAAKC,WACnE,MAEA,OACE,sBAAIC,IAAKP,EAAKH,UAAU,eAEtB,2BAASA,UAAU,kBACjB,gBAAC,EAAAW,KAAD,CAAMC,GAAIT,GACPG,GACC,gBAAC,EAAAO,EAAD,CACEP,MAAOA,EACPQ,IAAKf,EACLgB,GAAG,SACHf,UAAU,gBACVgB,aAAa,kBAInB,sBAAIhB,UAAU,iBAAgBiB,EAAAA,EAAAA,IAAMlB,IACpC,qBAAGC,UAAU,mBAAkBiB,EAAAA,EAAAA,IAAMZ,IACrC,gBAAC,EAAAM,KAAD,CAAMC,GAAIT,EAAKH,UAAU,0BAAzB,oBAQTP,EACG,0BAAQyB,QAhEG,WACrB3B,GAAY,IA+D+BS,UAAU,2BAA3C,gBAEA","sources":["webpack://becapital/./src/pages/blog.js"],"sourcesContent":["import React, { useEffect, useState }  from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport parse from \"html-react-parser\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data }) => {\r\n\r\n  const allPosts = data.allWpPost.nodes\r\n\r\n  const [list, setList ] = useState([...allPosts.slice(0, 6)])\r\n\r\n  const [loadMore, setLoadMore ] = useState(false)\r\n\r\n  const [hasMore, setHasMore ] = useState(allPosts.length > 6)\r\n\r\n  const handleLoadMore = () => {\r\n    setLoadMore(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (loadMore && hasMore) {\r\n      const currentLength = list.length\r\n      const isMore = currentLength < allPosts.length\r\n      const nextResults = isMore\r\n        ? allPosts.slice(currentLength, currentLength + 6)\r\n        : []\r\n      setList([...list, ...nextResults])\r\n      setLoadMore(false)\r\n    }\r\n  }, [loadMore, hasMore]) //eslint-disable-line\r\n\r\n  useEffect(() => {\r\n    const isMore = list.length < allPosts.length\r\n    setHasMore(isMore)\r\n  }, [list]) //eslint-disable-line\r\n\r\n  return (\r\n    <Layout>\r\n      <Seo title=\"Blog |\" />\r\n\r\n      <section className=\"section section__posts\">\r\n        <h1 className=\"section__title\">Blog</h1>\r\n        <p className=\"section__subtitle\">Investimos em informação pra você investir em você. Toda semana, um novo artigo sobre educação financeira e investimentos</p>\r\n        <div className=\"section__content posts posts--grid\">\r\n          <ul className=\"posts__items\">\r\n\r\n            {list.map( article => {\r\n\r\n              const { uri, title, featuredImage, excerpt} = article\r\n\r\n              const image = featuredImage !== null ? getImage(featuredImage.node.localFile) :\r\n              'url';\r\n\r\n              return (\r\n                <li key={uri} className=\"posts__item\">\r\n                 \r\n                  <article className=\"posts__article\">\r\n                    <Link to={uri}>\r\n                      {image && (\r\n                        <GatsbyImage\r\n                          image={image}\r\n                          alt={title}\r\n                          as=\"figure\"\r\n                          className=\"posts__figure\"\r\n                          imgClassName=\"posts__image\"\r\n                        />\r\n                      )}\r\n                    </Link>\r\n                    <h2 className=\"posts__title\">{parse(title)}</h2>\r\n                    <p className=\"posts__excerpt\">{parse(excerpt)}</p>\r\n                    <Link to={uri} className=\"button button__primary\">LER ARTIGO</Link>\r\n                  </article>\r\n                  \r\n                </li>\r\n              )\r\n            })}\r\n\r\n          </ul>\r\n          {hasMore ? (\r\n              <button onClick={handleLoadMore} className=\"button button__tertiary\">MAIS ARTIGOS</button>\r\n            ) : (\r\n              <p></p>\r\n            )}\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allWpPost(\r\n      sort: { fields: [date], order: DESC }\r\n      filter: {status: {eq: \"publish\"}}\r\n    ) {\r\n      nodes {\r\n        uri\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        title\r\n        excerpt\r\n        featuredImage {\r\n          node {\r\n            localFile {\r\n              childImageSharp {\r\n                gatsbyImageData\r\n              }\r\n            }\r\n          }\r\n        }\r\n        status\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["allPosts","data","allWpPost","nodes","useState","slice","list","setList","loadMore","setLoadMore","length","hasMore","setHasMore","useEffect","currentLength","nextResults","isMore","title","className","map","article","uri","featuredImage","excerpt","image","getImage","node","localFile","key","Link","to","G","alt","as","imgClassName","parse","onClick"],"sourceRoot":""}